CREATE TABLE IF NOT EXISTS "users" (
    ID SERIAL PRIMARY KEY,
    NAME VARCHAR(255) NOT NULL,
    FIRST_NAME VARCHAR(255) NOT NULL,
    STREET VARCHAR(255) NOT NULL,
    STREET_NUMBER INT NOT NULL,
    CITY VARCHAR(255) NOT NULL,
    ZIP_CODE INT NOT NULL,
    COUNTRY VARCHAR(255) NOT NULL,
    RESTAURANT_OWNER BOOLEAN NOT NULL
);


CREATE TABLE IF NOT EXISTS "moderateurs" (
    ID SERIAL PRIMARY KEY,
    ID_CLIENT INT NOT NULL 
);

CREATE TABLE IF NOT EXISTS "restaurants" (
    ID SERIAL PRIMARY KEY,
    NAME VARCHAR(255) NOT NULL,
    STREET VARCHAR(255) NOT NULL,
    STREET_NUMBER INT NOT NULL,
    CITY VARCHAR(255) NOT NULL,
    ZIP_CODE INT NOT NULL,
    COUNTRY VARCHAR(255) NOT NULL,
    FOOD_TYPE VARCHAR(255) NOT NULL,
    MENU INT NOT NULL,
    PRICE_RANGE INT NOT NULL,
    AVERAGE_RATING FLOAT NOT NULL,
    OPENING_TIME INT NOT NULL,
    CLOSING_TIME INT NOT NULL,
    DELIVERY BOOLEAN NOT NULL,
    CONSTRAINT price_range_check CHECK (PRICE_RANGE >= 1 AND PRICE_RANGE <= 3),
    CONSTRAINT average_rating_check CHECK (AVERAGE_RATING >= 0 AND AVERAGE_RATING <= 5),
    CONSTRAINT opening_time_check CHECK (OPENING_TIME >= 0 AND OPENING_TIME <= 24),
    CONSTRAINT closing_time_check CHECK (CLOSING_TIME >= 0 AND CLOSING_TIME <= 24),
    CONSTRAINT opening_closing_time_check CHECK (OPENING_TIME < CLOSING_TIME)
);

CREATE TABLE IF NOT EXISTS "owns" (
    ID_USER INT NOT NULL,
    ID_RESTAURANT INT NOT NULL,
    FOREIGN KEY (ID_USER) REFERENCES users(ID),
    FOREIGN KEY (ID_RESTAURANT) REFERENCES restaurants(ID)
);

CREATE TABLE IF NOT EXISTS "menus" (
    ID SERIAL PRIMARY KEY
);

CREATE TABLE IF NOT EXISTS "plats" (
    ID SERIAL PRIMARY KEY,
    MENU INT,
    NAME VARCHAR(255) NOT NULL,
    PRICE INT NOT NULL
);

CREATE TABLE IF NOT EXISTS "allergenes" (
    ID SERIAL PRIMARY KEY,
    NAME VARCHAR(255) NOT NULL
);

CREATE TABLE IF NOT EXISTS "plats_allergenes" (
    ID_PLAT INT NOT NULL,
    ID_ALLERGENE INT NOT NULL
);

CREATE TABLE IF NOT EXISTS "notes" (
    ID SERIAL PRIMARY KEY,
    ID_CLIENT INT NOT NULL,
    ID_RESTAURANT INT NOT NULL,
    DATE_RATING DATE NOT NULL, 
    COMMENT VARCHAR(4096) NOT NULL,
    NOTE FLOAT NOT NULL,
    RECOMMENDATION INT NOT NULL,
    NOTE_DELIVERY INT,
    NOTE_PHYSICAL INT,
    BEGIN_HOUR INT,
    END_HOUR INT,
    FOREIGN KEY (ID_CLIENT) REFERENCES users(ID),
    FOREIGN KEY (ID_RESTAURANT) REFERENCES restaurants(ID),
    PRICE INT NOT NULL
    CONSTRAINT note_check CHECK (NOTE >= 0 AND NOTE <= 5),
    CONSTRAINT at_least_one_note CHECK (NOTE_DELIVERY IS NOT NULL OR NOTE_PHYSICAL IS NOT NULL),
    CONSTRAINT note_delivery_check CHECK (NOTE_DELIVERY >= 0 AND NOTE_DELIVERY <= 5),
    CONSTRAINT note_physical_check CHECK (NOTE_PHYSICAL >= 0 AND NOTE_PHYSICAL <= 5),
    CONSTRAINT recommendation_check CHECK (RECOMMENDATION >= 1 AND RECOMMENDATION <= 3),
    CONSTRAINT begin_hour_check CHECK (BEGIN_HOUR >= 0 AND BEGIN_HOUR <= 24),
    CONSTRAINT end_hour_check CHECK (END_HOUR >= 0 AND END_HOUR <= 24),
    CONSTRAINT begin_end_hour_check CHECK (BEGIN_HOUR < END_HOUR)
);

CREATE TABLE IF NOT EXISTS "notes_supprimees" (
    ID INT PRIMARY KEY,
    ID_MODERATEUR INT, -- can be null bc tsv datas does not mention the moderator, but largely recommended to be filled
    ID_CLIENT INT NOT NULL,
    ID_RESTAURANT INT NOT NULL,
    DATE_RATING DATE NOT NULL,
    COMMENT VARCHAR(4096) NOT NULL,
    NOTE INT NOT NULL,
    RECOMMENDATION INT NOT NULL,
    NOTE_DELIVERY INT,
    NOTE_PHYSICAL INT,
    BEGIN_HOUR INT,
    END_HOUR INT,
    FOREIGN KEY (ID_MODERATEUR) REFERENCES moderateurs(ID),
    FOREIGN KEY (ID_RESTAURANT) REFERENCES restaurants(ID),
    PRICE INT NOT NULL,
    MOD_COMMENT VARCHAR(4096) NOT NULL,
    CONSTRAINT note_check CHECK (NOTE >= 0 AND NOTE <= 5),
    CONSTRAINT at_least_one_note CHECK (NOTE_DELIVERY IS NOT NULL OR NOTE_PHYSICAL IS NOT NULL),
    CONSTRAINT note_delivery_check CHECK (NOTE_DELIVERY >= 0 AND NOTE_DELIVERY <= 5),
    CONSTRAINT note_physical_check CHECK (NOTE_PHYSICAL >= 0 AND NOTE_PHYSICAL <= 5)
);

CREATE TABLE IF NOT EXISTS "notes_plat" (
    ID_PLAT INT NOT NULL,
    ID_NOTE INT NOT NULL,
    FOREIGN KEY (ID_PLAT) REFERENCES plats(ID)
)